#include<reg52.h>
#define uchar unsigned char
uchar counter=0,tmp,second=0,minute=0, change = 1;
int led[]= {0xc0, 0xf9, 0xa4, 0xb0, 0x99, 0x92, 0x82, 0xf8, 0x80, 0x90}; //数字0-9
int _led[]= {0x40, 0x79, 0x24, 0x30, 0x19, 0x12, 0x02, 0x78, 0x00, 0x10};
#include "reg52.h"			 //此文件中定义了单片机的一些特殊功能寄存器

typedef unsigned int u16;	  //对数据类型进行声明定义
typedef unsigned char u8;


/*******************************************************************************
* 函数名         :UsartInit()
* 函数功能		   :设置串口
* 输入           : 无
* 输出         	 : 无
*******************************************************************************/
void UsartInit()
{
    SCON=0X50;			//设置为工作方式1
    TMOD=0X20;			//设置计数器工作方式2
    PCON=0X80;			//波特率加倍
    TH1=0XF3;		 //计数器初始值设置，注意波特率是4800的
    TL1=0XF3;
    ES=1;						//打开接收中断
    EA=1;						//打开总中断
    TR1=1;					//打开计数器
}

/*******************************************************************************
* 函 数 名       : main
* 函数功能		 : 主函数
* 输    入       : 无
* 输    出    	 : 无
*******************************************************************************/
void main()
{
    UsartInit();  //	串口初始化
    while(1)
    {

    }

    //设置TMOD寄存器
    TMOD=0X01;							//设置TMOD寄存器
    TH0=(65536-5000)/256;			   //装初值
    TL0=(65536-5000)%256;
    EA=1;		//开 中断
    ET0=1;
    TR0=1;
    while(1)
    {

        tmp=counter%4;
        switch(tmp)
 		{
        case 0:
            P2 = 0x7f;
            P0 = led[second%10];
            break;
        case 1:
            P2 = 0xbf;
            P0 = led[second/10];
            break;
        case 2:
            P2 = 0xdf;
            P0 = _led[minute%10];
            break;
        case 3:
            P2 = 0xef;
            P0 = led[minute/10];
            break;

        }

    }


}

/*******************************************************************************
* 函数名         : Usart() interrupt 4
* 函数功能		  : 串口通信中断函数
* 输入           : 无
* 输出         	 : 无
*******************************************************************************/
void Usart() interrupt 4
{
    u8 receiveData;

    receiveData=SBUF;//出去接收到的数据
    if(receiveData == '1')
    {
        P2 = 0x00;
    }
    else if(receiveData == '0')
    {
        P2 = 0xff;
    }
    RI = 0;//清除接收中断标志位
    SBUF=receiveData;//将接收到的数据放入到发送寄存器
    while(!TI);			 //等待发送数据完成
    TI=0;						 //清除发送完成标志位
}
/**********************************************
            中断
***********************************************/
void zhongduan()interrupt 1
{
    TH0=(65536-5000)/256;			   //装初值
    TL0=(65536-5000)%256;
    TF0=0;
    TR0=1;
    counter++;
    if(counter==200)
    {
        counter=0;
        second++;
        if(second==60)
        {
            second=0;
            minute++;
        }
    }
    change = 1;
}
/*
void sendmsg(uchar ps)
{
SBUF = ps;            // 要发送的字符放入缓冲区
while(TI == 0);    // 一直等等，直到发送完数据为止
TI = 0;
}
uchar rcvmsg(void)   //调用此函数前，要先调用RI,查看是否收到数据，确定已收到的话，再调用此函数
{

RI=0;                       //要先将RI=0再返回，否则，返回后，RI=0这句就不执行了。
return SBUF;
}




*/
/*
串口通信 向电脑发送字符串（任意） 、数字。
电脑向单片机发送数字，字符。
扩展：
加入网页，通过网页发送接收数据（后期有用，暂不做要求）
审核内容：
1、单片机每两秒（定时器完成）向pc发送一个字符串，每次发送内容包括一行数字（当前秒数），一行字符串任意。
2、pc向单片机发送“123” 则单片机向pc发送当前秒数，如果发送“321”发送字符串“get 321！” 。
3、pc向单片机发送“0”，单片机开启所有小灯，发送”9”关闭所有小灯。

*/